import { Telegraf, Markup } from 'telegraf';

export function createBot({ token, adminChatId, webAppUrl }) {
  if (!token) throw new Error('BOT_TOKEN is required');

  const bot = new Telegraf(token);

  const APP_URL = webAppUrl || 'http://localhost:3000';

  bot.start((ctx) => {
    const kb = Markup.keyboard([
      Markup.button.webApp('–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', APP_URL)
    ]).resize();

    return ctx.reply(
      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NEURO FUSION üëã\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.',
      kb
    );
  });

  bot.command('app', (ctx) =>
    ctx.reply(
      '–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:',
      Markup.inlineKeyboard([[Markup.button.webApp('‚ñ∂Ô∏è –û—Ç–∫—Ä—ã—Ç—å', APP_URL)]])
    )
  );

  // –ü—Ä–∏—ë–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp (—Ñ–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏)
  bot.on('web_app_data', async (ctx) => {
    try {
      const data = JSON.parse(ctx.message.web_app_data.data || '{}');
      const { name, phone, company, message } = data;

      const text =
`üåü –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ –º–∏–Ω–∏-–∞–ø–ø–∞ NEURO FUSION
–û—Ç: ${ctx.from.first_name || ''} ${ctx.from.last_name || ''} (@${ctx.from.username || '‚Äî'})
–ò–º—è: ${name || '‚Äî'}
–¢–µ–ª–µ—Ñ–æ–Ω: ${phone || '‚Äî'}
–ö–æ–º–ø–∞–Ω–∏—è: ${company || '‚Äî'}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${message || '‚Äî'}`;

      await ctx.telegram.sendMessage(adminChatId || ctx.chat.id, text);
      await ctx.reply('–ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ ‚úÖ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    } catch (e) {
      console.error(e);
      await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    }
  });

  return bot;
}
